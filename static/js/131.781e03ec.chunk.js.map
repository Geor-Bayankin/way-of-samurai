{"version":3,"file":"static/js/131.781e03ec.chunk.js","mappings":"gMACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0B,mBCc7K,EAXmB,SAACA,GAChB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAASC,UACrBC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAI,YAAcP,EAAMQ,GAAIN,UAAW,SAAAO,GAAO,OAAIA,EAAQC,SAAWP,EAAWA,CAAQ,EAACC,SAAA,EAC9FH,EAAAA,EAAAA,KAAA,OAAKU,IAAI,2FACRX,EAAMY,SAIvB,ECFA,EARgB,SAACZ,GACb,OACIC,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAAA,OAAAG,SAAOJ,EAAMa,WAGzB,E,uCCkCMC,GAAsBC,EAAAA,EAAAA,GAAW,CACnCC,KAAM,wBADkBD,EATL,SAACf,GACpB,OACIK,EAAAA,EAAAA,MAAA,QAAMY,SAAUjB,EAAMkB,aAAad,SAAA,EAC/BH,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAaT,KAAK,iBAAiBU,UAAU,WAAWC,YAAY,6HAAyBC,SAAU,CAACC,EAAAA,GAAeC,EAAAA,EAAAA,GAAiB,SAC1JzB,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,6DAGpB,IAMA,EAvCgB,SAACJ,GAIb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAC,GAAC,OAAK/B,EAAAA,EAAAA,KAACgC,EAAU,CAACrB,KAAMoB,EAAEpB,KAAiBJ,GAAIwB,EAAExB,IAAZwB,EAAExB,GAAe,IAC9F0B,EAAmBP,EAAMQ,aAAaJ,KAAI,SAAAK,GAAC,OAAKnC,EAAAA,EAAAA,KAACoC,EAAO,CAACxB,QAASuB,EAAEvB,SAAcuB,EAAE5B,GAAK,IAM7F,OACIH,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAUC,SAAA,EACtBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,SAC1ByB,KAEL5B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACvBH,EAAAA,EAAAA,KAAA,OAAAG,SAAM8B,OAEVjC,EAAAA,EAAAA,KAACa,EAAmB,CAACG,SAZT,SAACqB,GACjBtC,EAAMuC,YAAYD,EAASE,eAC/B,MAaJ,E,oBCZA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAACf,GACnB,MAAM,CACFC,YAAaD,EAAMC,YAE3B,IACyB,SAACe,GACtB,MAAM,CACFJ,YAAa,SAACC,GACVG,GAASC,EAAAA,EAAAA,GAAyBJ,GACtC,EAER,IAIIK,EAAAA,EAFJ,CAGEC,E","sources":["webpack://my-first-react-app/./src/components/Navbar/NavbarComponents/Dialogs/Dialogs.module.css?a9af","components/Navbar/NavbarComponents/Dialogs/DialogItem/DialogItem.jsx","components/Navbar/NavbarComponents/Dialogs/Message/Message.jsx","components/Navbar/NavbarComponents/Dialogs/Dialogs.jsx","components/Navbar/NavbarComponents/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__mzYrV\",\"dialogsItems\":\"Dialogs_dialogsItems__eHyH6\",\"dialog\":\"Dialogs_dialog__xWqXD\",\"active\":\"Dialogs_active__iYRxV\",\"messages\":\"Dialogs_messages__e2Cep\",\"message\":\"Dialogs_message__JMLPf\"};","import s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n// Компонента для диалога\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id} className={navData => navData.isActive ? s.active : s.dialog}>\r\n                <img src='https://tripmydream.cc/travelhub/travel/block_gallery/10/6848/gallery_first_106848.jpg'/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css';\r\n\r\n// Компонента для сообщения\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div >{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {FormControl, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    // Функции для создания массивов компонент для диалогов и сообщений\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(d => (<DialogItem name={d.name} key={d.id} id={d.id}/>))\r\n    let messagesElements = state.messagesData.map(m => (<Message message={m.message} key={m.id}/>))\r\n\r\n    let addNewMessage = (formData) => {\r\n        props.SendMessage(formData.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={ addNewMessage }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst addMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={FormControl} name='newMessageBody' typeField='textarea' placeholder='Введите ваше сообщение' validate={[requiredField, maxLengthCreator(100)]}/>\r\n            <button>Отправить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm ({\r\n    form: 'dialogAddMessageForm'\r\n})(addMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageActionCreator} from \"../../../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        SendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","_jsx","className","s","children","_jsxs","NavLink","to","id","navData","isActive","src","name","message","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","FormControl","typeField","placeholder","validate","requiredField","maxLengthCreator","state","dialogsPage","dialogsElements","dialogsData","map","d","DialogItem","messagesElements","messagesData","m","Message","formData","SendMessage","newMessageBody","compose","connect","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}